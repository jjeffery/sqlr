// Code generated by "sqlrow-gen"; DO NOT EDIT

package testdata

import (
	"github.com/jjeffery/errors"
)

// Select a list of Row2s from an SQL query.
func (q Row2Query) Select(query string, args ...interface{}) ([]*Row2, error) {
	var rows []*Row2
	_, err := q.schema.Select(q.db, &rows, query, args...)
	if err != nil {
		return nil, errors.Wrap(err, "cannot query Row2s").With(
			"query", query,
			"args", args,
		)
	}
	return rows, nil
}

// SelectOne selects a Row2 from an SQL query. Returns nil if the query returns no rows.
// If the query returns one or more rows the value for the first is returned and any subsequent
// rows are discarded.
func (q Row2Query) SelectOne(query string, args ...interface{}) (*Row2, error) {
	var row Row2
	n, err := q.schema.Select(q.db, &row, query, args...)
	if err != nil {
		return nil, errors.Wrap(err, "cannot query one Row2").With(
			"query", query,
			"args", args,
		)
	}
	if n == 0 {
		return nil, nil
	}
	return &row, nil
}
